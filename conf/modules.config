/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

// Environment specification needed for Quarto
env {
    XDG_CACHE_HOME = "./.xdg_cache_home"
    XDG_DATA_HOME = "./.xdg_data_home"
}

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    // Store sample-specific results in per-sample subfolders
    withName: 'UNTAR_SPACERANGER_INPUT|UNTAR_DOWNSTREAM_INPUT' {
        publishDir = [
            enabled: params.keep_untar_output,
            path: { "${params.outdir}/${meta.id}/data/untar" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SPACERANGER_COUNT {
        publishDir = [
            // NOTE: the sample name is already excluded in the path that's getting published.
            // This publishDir directive puts spaceranger outputs in results/${meta.id}/outs
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ST_READ_DATA|ST_QC_AND_NORMALISATION|ST_CLUSTERING|ST_SPATIAL_DE' {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/reports" },
                mode: params.publish_dir_mode,
                pattern: "*{.html,_files}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/data" },
                mode: params.publish_dir_mode,
                pattern: "st_adata_*.h5ad"
            ],
            [
                path: { "${params.outdir}/${meta.id}/degs" },
                mode: params.publish_dir_mode,
                pattern: "*.csv"
            ]
        ]
    }

}
