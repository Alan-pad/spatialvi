nextflow_pipeline {
    name "Test workflow (only downstream part)"
    script "main.nf"
    tag "pipeline"

    test("CytAssist_11mm_FFPE_Human_Glioblastoma_2") {
        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                // Workflow
                { assert workflow.success },
                { assert snapshot(UTILS.removeNextflowVersion("$outputDir")).match("software_versions") },

                // Data
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/data/st_adata_processed.h5ad").exists() },
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/data/st_adata_norm.h5ad").exists() },
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/data/st_adata_plain.h5ad").exists() },
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/data/st_adata_raw.h5ad").exists() },

                // Reports
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/reports/st_qc_and_normalisation.html").text.contains("Distributions after filtering") },
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/reports/st_clustering.html").text.contains("AnnData object is saved in the") },
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/reports/st_spatial_de.html").text.contains("Spatially variable genes") },

                // DEGs
                { assert file("$outputDir/CytAssist_11mm_FFPE_Human_Glioblastoma_2/degs/st_spatial_de.csv").exists() },

                // MultiQC
                { assert file("$outputDir/multiqc/multiqc_report.html").exists() }
            )
        }
    }
}
